name: Build and test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_MULTILEVEL_LOOKUP: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: Restore NuGet cache
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore --locked-mode

      - name: Build
        run: dotnet build --no-restore

  unit_test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: [ compile ]
    defaults: 
      run:
        working-directory: tests/MyInvest.UnitTests
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run unit tests
        uses: ./.github/workflows/callable-run-tests
        with:
          test_suite: UnitTests
          needs_db: false
          
  integration_test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: [ compile ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run integration tests
        uses: ./.github/workflows/callable-run-tests
        with:
          test_suite: IntegrationTests
          needs_db: true
  
  component_test:
    name: Component test
    runs-on: ubuntu-latest
    needs: [ compile ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run component tests
        uses: ./.github/workflows/callable-run-tests
        with:
          test_suite: ComponentTests
          needs_db: true
          
  app_container:
    name: Build & push app container
    if: success() && github.event_name == 'push'
    needs: 
      - unit_test
      - integration_test
      - component_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Docker login
        uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v2.9.0
        with:
          context: src/MyInvest
          push: true
          tags: ghcr.io/lewis-od/my-invest/myinvest:${{ github.run_number }}
  
  migrations_container:
    name: Build & push migrations container
    if: success() && github.event_name == 'push'
    needs:
      - unit_test
      - integration_test
      - component_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.9.0
        with:
          context: src/MyInvest
          file: src/MyInvest/Dockerfile.migrations
          push: true
          tags: ghcr.io/lewis-od/my-invest/myinvest-migrations:${{ github.run_number }}
